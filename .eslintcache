[{"/home/rev/code/notesfrontend/src/index.js":"1","/home/rev/code/notesfrontend/src/App.js":"2","/home/rev/code/notesfrontend/src/services/notes.js":"3","/home/rev/code/notesfrontend/src/components/Footer.js":"4","/home/rev/code/notesfrontend/src/components/Note.js":"5","/home/rev/code/notesfrontend/src/components/Notification.js":"6","/home/rev/code/notesfrontend/src/services/login.js":"7"},{"size":139,"mtime":1610844210000,"results":"8","hashOfConfig":"9"},{"size":3948,"mtime":1635990750475,"results":"10","hashOfConfig":"9"},{"size":774,"mtime":1635958523201,"results":"11","hashOfConfig":"9"},{"size":319,"mtime":1610844210000,"results":"12","hashOfConfig":"9"},{"size":306,"mtime":1610844210000,"results":"13","hashOfConfig":"9"},{"size":214,"mtime":1610844210000,"results":"14","hashOfConfig":"9"},{"size":241,"mtime":1635988232259,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"q9x6ua",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"21","messages":"22","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"18"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/rev/code/notesfrontend/src/index.js",[],["32","33"],"/home/rev/code/notesfrontend/src/App.js",[],"/home/rev/code/notesfrontend/src/services/notes.js",["34","35"],"import axios from 'axios'\nconst baseUrl = '/api/notes'\n\nconst getAll2 = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n}\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  const nonExisting = {\n    id: 10000,\n    content: 'This note is not saved to server',\n    date: '2019-05-30T17:30:31.098Z',\n    important: true,\n  }\n  return request.then(response => response.data.concat(nonExisting))\n}\n\nconst create = newObject => {\n  const request = axios.post(baseUrl, newObject)\n  return request.then(response => response.data)\n}\n\nconst update = (id, newObject) => {\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\n  return request.then(response => response.data)\n}\n\nexport default { \n  getAll, create, update\n}","/home/rev/code/notesfrontend/src/components/Footer.js",[],"/home/rev/code/notesfrontend/src/components/Note.js",[],"/home/rev/code/notesfrontend/src/components/Notification.js",[],"/home/rev/code/notesfrontend/src/services/login.js",["36"],{"ruleId":"37","replacedBy":"38"},{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","severity":1,"message":"42","line":4,"column":7,"nodeType":"43","messageId":"44","endLine":4,"endColumn":14},{"ruleId":"45","severity":1,"message":"46","line":30,"column":1,"nodeType":"47","endLine":32,"endColumn":2},{"ruleId":"45","severity":1,"message":"46","line":9,"column":1,"nodeType":"47","endLine":9,"endColumn":23},"no-native-reassign",["48"],"no-negated-in-lhs",["49"],"no-unused-vars","'getAll2' is assigned a value but never used.","Identifier","unusedVar","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation"]